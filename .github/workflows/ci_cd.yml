# Название вашего пайплайна
name: Version update runner

#Триггер на события, которые производятся по пушу или мерджу 
# on:
#   push:
#     branches: [ "master", "develop" ]
on:
  pull_request:
    # На какие типы событий он должен работать
    #types: [opened, synchronize, reopened, closed, assigned, unassigned, labeled, unlabeled, edited]
    types: [closed]
    branches:
      - release
env:
  TYPE_BRANCH: none
  NAME_VERSION_FILE: version

# Создаем job
jobs:
  pre-merge-check:
    runs-on: ubuntu-latest
    outputs:
      type_branch_f: ${{ steps.feature-branch.outputs.type_branch_f }}
      type_branch_h: ${{ steps.hotfix-branch.outputs.type_branch_h }}
    steps:
      - name: Check on existing VERSION file
        shell: bash
        run: echo "check VERSION file in ROOT directory"
      
      - name: Get branch names
        id: branch-names
        uses: tj-actions/branch-names@v8
      
      - name: Print info
        id: print-info
        run: |
          echo "EVENT NAME    : ${{ github.event_name }}"
          echo "ACTION        : ${{github.event.action }}"
          echo "EVENT NAME    : ${{ github.event_name }}"
          echo "IS            : ${{github.event.pull_request.merged}}"
          echo "CURRENT BRACNH: ${{ steps.branch-names.outputs.current_branch }}"
          echo "REF           : ${{github.ref}}"
          echo "REF NAME      :${{github.ref_name}}"
          echo "DEFAULT BRANCH:${{ steps.branch-names.outputs.default_branch }}"
                
      - name: Провека на feature 
        id: feature-branch
        if:  contains(steps.branch-names.outputs.current_branch,'feature')
        run: | 
          echo "ЗАмержена ветка Feature. Требуется произвести обновлении файла version в части минорной версии"
          echo "type_branch_f=feature" >> "$GITHUB_OUTPUT"
          
      - name: Провека на hotfix 
        id: hotfix-branch
        if: contains(steps.branch-names.outputs.current_branch,'hotfix')
        run: | 
          echo "ЗАмержена ветка hotfix. Требуется произвести обновлении файла version в части патч версии"
          echo "type_branch_h=hotfix" >> "$GITHUB_OUTPUT"
        
        
  # Проверка файла на наличие в репозитории 
  version-file-check:
    runs-on: ubuntu-latest
    # чего ждем. Т.е. начнем выполняться только после того, как отработает джоба, указанная выше
    needs: pre-merge-check
    # постепенно выполняем шаги
    steps:
      - name: Verify current directory 
        run: pwd
      - name: Print info about directory 
        run: ls -la
      - name: Print info about ${{env.NAME_VERSION_FILE}} 
        run: ls -la
        
  # Производим определение какую версию нам обновлять       
  update-version:
    runs-on: ubuntu-latest
    needs: version-file-check
    steps:
        # обновляем минорную версию
      - name: Check update version MINOR
      - env:
          branch: ${{needs.pre-merge-check.outputs.type_branch_f}}
        run: | 
          echo " t ${{ branch }}"
          echo " new $branch"
        #if: ${{ env.TYPE_BRANCH == 'feature' }}
        #run: echo "Update minor version"

        # обновляем патч версию
      - name: Check update version PATCH 
        if: ${{ env.TYPE_BRANCH == 'hotfix' }}
        run: echo "Update hotfix version"

      #   # Ничего не обновляем и выходим
      # - name: Check update version MINOR 
      #   if: ${{ env.TYPE_BRANCH == 'none' }}
      #   run: | 
      #     echo "Nothing to update"
      #     # exit 0
              
      
    

  
